apiVersion: template.openshift.io/v1
kind: Template
labels:
  jaime: 1.10.0
  template: jaime
message: 'Una desc'
metadata:
  annotations:
    description: An example application.
    iconClass: icon-sso
    openshift.io/display-name: Jaime  Project by Braian Lobo and Pablo Castelo
    tags: jaime,openshift,automation
    version: 1.10.0
  name: jaime
objects:

####################################################
# SERVICES
####################################################

- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
      component: server
  spec:
    selector:
      app: ${APPLICATION_NAME}
    ports:
    - protocol: TCP
      port: 5000
      name: jaimebe
      targetPort: 5000

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's port.
    labels:
      application: ${APPLICATION_NAME}-front
      component: frontend  
    name: ${APPLICATION_NAME}-front
  spec:
    selector:
      app: ${APPLICATION_NAME}-front
    ports:
      - protocol: TCP
        port: 80
        name: front
        targetPort: 8080

- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-agent-pushgateway
    labels:
      application: ${APPLICATION_NAME}-agent-pushgateway
      component: agent 
  spec:
    ports:
    - port: 7001
      protocol: TCP
      name: agent
    - port: 9091
      protocol: TCP
      name: pushgateway
    selector:
      app: ${APPLICATION_NAME}-agent-pushgateway     

- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-agent-base
    labels:
      application: ${APPLICATION_NAME}-agent-base
      component: agent 
  spec:
    ports:
    - port: 7001
      name: agent
    selector:
      app: ${APPLICATION_NAME}-agent-base

- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-agent-kubernetes
    labels:
      application: ${APPLICATION_NAME}-agent-kubernetes
      component: agent 
  spec:
    ports:
    - port: 7001
      name: agent
    selector:
      app: ${APPLICATION_NAME}-agent-kubernetes

- apiVersion: v1
  kind: Service
  metadata:
    name:  ${APPLICATION_NAME}-agent-openshift
    labels:
      application: ${APPLICATION_NAME}-agent-openshift
      component: agent 
  spec:
    ports:
    - port: 7001
      name: agent
    selector:
      app:  ${APPLICATION_NAME}-agent-openshift

####################################################
# ROUTES      
####################################################

- kind: Route
  apiVersion: route.openshift.io/v1
  id: ${APPLICATION_NAME}-front-http
  metadata:
    annotations:
      description: Route for frontend's http service.
    labels:
      application: ${APPLICATION_NAME}
      component: frontend
    name: ${APPLICATION_NAME}-front
  spec:
    to:
      name: ${APPLICATION_NAME}-front

- kind: Route
  apiVersion: route.openshift.io/v1
  id: ${APPLICATION_NAME}-http
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
      component: server
    name: ${APPLICATION_NAME}
  spec:
    host: ${BACK_HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
      
- kind: Route
  apiVersion: route.openshift.io/v1
  id: ${APPLICATION_NAME}-pushgateway
  metadata:
    annotations:
      description: Route for pushgateway server.
    labels:
      application: ${APPLICATION_NAME}-pushgateway
      component: server
    name: ${APPLICATION_NAME}-pushgateway
  spec:
    to:
      name: ${APPLICATION_NAME}-agent-pushgateway
    port:
      targetPort: pushgateway  

####################################################
# DEPLOYMENTS
####################################################

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      application: ${APPLICATION_NAME}
      component: server
    name: ${APPLICATION_NAME}
  spec:
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}
    replicas: 1
    strategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
      spec:
        volumes:
          - name: ${APPLICATION_NAME}-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-pvc
          - name: ${APPLICATION_NAME}-agents-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-agents-pvc
        containers:
          - name: ${APPLICATION_NAME}
            image: 'ghcr.io/jaime-project/jaime:${JAIME_VERSION}'
            ports:
              - containerPort: 5000
                protocol: TCP
            volumeMounts:
              - name: ${APPLICATION_NAME}-pvc
                mountPath: /home/jaime/.jaime
              - name: ${APPLICATION_NAME}-agents-pvc
                mountPath: /data
        restartPolicy: Always  

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      application: ${APPLICATION_NAME}-front
      component: frontend
    name: ${APPLICATION_NAME}-front
  spec:
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-front
    replicas: 1
    strategy:
      type: RollingUpdate    
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-front
      spec:
        containers:
          - name: ${APPLICATION_NAME}-front
            image: 'ghcr.io/jaime-project/jaime-front:${JAIME_VERSION}'
            env:
              - name: JAIME_URL
                value: http://${BACK_HOSTNAME_HTTP}/
            ports:
              - containerPort: 8080
                protocol: TCP
        restartPolicy: Always 

####################################################
# STATEFULSETS      
####################################################

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      application: ${APPLICATION_NAME}-agent-openshift
      component: agent  
    name: ${APPLICATION_NAME}-agent-openshift
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-agent-openshift
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-agent-openshift
      spec:
        volumes:
          - name: ${APPLICATION_NAME}-agents-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-agents-pvc
        containers:
          - name: ${APPLICATION_NAME}-agent-openshift
            image: 'ghcr.io/jaime-project/jaime-agent-openshift:${JAIME_VERSION}'
            ports:
              - name: agent
                containerPort: 7001
                protocol: TCP
            env:
              - name: JAIME_URL
                value: ${JAIME_INTERNAL_URL}
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: ${APPLICATION_NAME}-agents-pvc
                mountPath: /data
        restartPolicy: Always
    serviceName: ${APPLICATION_NAME}-agent-openshift
    podManagementPolicy: OrderedReady
    updateStrategy:
      type: RollingUpdate

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      application: ${APPLICATION_NAME}-agent-kubernetes
      component: agent    
    name: ${APPLICATION_NAME}-agent-kubernetes
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-agent-kubernetes
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-agent-kubernetes
      spec:
        volumes:
          - name: ${APPLICATION_NAME}-agents-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-agents-pvc
        containers:
          - name: ${APPLICATION_NAME}-agent-kubernetes
            image: 'ghcr.io/jaime-project/jaime-agent-kubernetes:${JAIME_VERSION}'
            ports:
              - name: agent
                containerPort: 7001
                protocol: TCP
            env:
              - name: JAIME_URL
                value: ${JAIME_INTERNAL_URL}
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: ${APPLICATION_NAME}-agents-pvc
                mountPath: /data
        restartPolicy: Always
    serviceName: ${APPLICATION_NAME}-agent-kubernetes
    podManagementPolicy: OrderedReady
    updateStrategy:
      type: RollingUpdate

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      application: ${APPLICATION_NAME}-agent-base
      component: agent      
    name: ${APPLICATION_NAME}-agent-base
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-agent-base
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-agent-base
      spec:
        volumes:
          - name: ${APPLICATION_NAME}-agents-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-agents-pvc
        containers:
          - name: ${APPLICATION_NAME}-agent-base
            image: 'ghcr.io/jaime-project/jaime-agent:${JAIME_VERSION}'
            ports:
              - name: agent
                containerPort: 7001
                protocol: TCP
            env:
              - name: JAIME_URL
                value: ${JAIME_INTERNAL_URL}
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: ${APPLICATION_NAME}-agents-pvc
                mountPath: /data
        restartPolicy: Always
    serviceName: ${APPLICATION_NAME}-agent-base
    podManagementPolicy: OrderedReady
    updateStrategy:
      type: RollingUpdate

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      application: ${APPLICATION_NAME}-agent-pushgateway
      component: agent    
    name: ${APPLICATION_NAME}-agent-pushgateway
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-agent-pushgateway
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}-agent-pushgateway
      spec:
        volumes:
          - name: ${APPLICATION_NAME}-agents-pvc
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-agents-pvc
        containers:
          - name: ${APPLICATION_NAME}-agent-base
            image: 'ghcr.io/jaime-project/jaime-agent-pushgateway:${JAIME_VERSION}'
            ports:
              - name: agent
                containerPort: 7001
                protocol: TCP
              - name: gateway
                containerPort: 9091
                protocol: TCP              
            env:
              - name: JAIME_URL
                value: ${JAIME_INTERNAL_URL}
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: ${APPLICATION_NAME}-agents-pvc
                mountPath: /data
        restartPolicy: Always
    serviceName: ${APPLICATION_NAME}-agent-pushgateway
    podManagementPolicy: OrderedReady
    updateStrategy:
      type: RollingUpdate
      
####################################################
# PVCs      
####################################################

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-pvc
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${JAIME_VOLUME_SIZE}
    storageClassName: ocs-storagecluster-cephfs
    volumeMode: Filesystem

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-agents-pvc
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: ${AGENTS_VOLUME_SIZE}
    storageClassName: ocs-storagecluster-cephfs
    volumeMode: Filesystem

####################################################
# PARAMS      
####################################################

parameters:

- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: jaime

- description: 'Version of Jaime to download images'
  name: JAIME_VERSION
  required: true  

- description: 'Custom hostname for http service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: BACK_HOSTNAME_HTTP

- description: 'Custom hostname for frontend http service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  displayName: Custom frontend http Route Hostname
  name: FRONT_HOSTNAME_HTTP

- description: 'Jaime internal URL'
  displayName: Jaime internal URL
  name: JAIME_INTERNAL_URL  
  required: true
  value: http://jaime:5000  

- description: 'Jaime volume size'
  displayName: Jaime volume size
  name: JAIME_VOLUME_SIZE
  required: true
  value: 2Gi

- description: 'Agents volume size'
  displayName: Agents volume size
  name: AGENTS_VOLUME_SIZE
  required: true
  value: 8Gi
