####################################################
# NANESPACE
####################################################

kind: Project
apiVersion: project.openshift.io/v1
metadata:
  name: jaime
  labels:
    application: jaime

---

####################################################
# SA
####################################################

apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaime
  namespace: jaime
  labels:
    application: jaime

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jaime-admin
  labels:
    application: jaime
subjects:
  - kind: ServiceAccount
    name: jaime
    namespace: jaime
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin

---

####################################################
# CONFIGMAPS
####################################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: jaime-config
  namespace: jaime
  labels:
    application: jaime
data: 
  JAIME_BACK_URL_EXTERNAL: https://<jaime-route-url>/
  JAIME_BACK_URL_INTERNAL: http://jaime-back:5000/

---

####################################################
# SECRETS
####################################################

apiVersion: v1
kind: Secret
metadata:
  name: jaime-secrets
  namespace: jaime
  labels:
    application: jaime
    component: backend
stringData: 
  JAIME_USER: jaime
  JAIME_PASS: jaime
  DB_URL: postgresql+pg8000://jaime:jaime@postgres:5432/jaime

---

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: jaime
  labels:
    application: jaime
    component: db
stringData: 
  POSTGRES_USER: jaime
  POSTGRES_PASSWORD: jaime
  POSTGRES_DB: jaime

---

kind: Secret
apiVersion: v1
metadata:
  name: auth-cluster-jaime
  namespace: jaime
  labels:
    application: jaime
    component: backend
  annotations:
    kubernetes.io/service-account.name: jaime
type: kubernetes.io/service-account-token

---

####################################################
# SERVICES
####################################################

apiVersion: v1
kind: Service
metadata:
  name: jaime-front
  namespace: jaime
  labels:
    application: jaime
    component: frontend
spec:
  selector:
    app: jaime-front
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: jaime-back
  namespace: jaime
  labels:
    application: jaime
    component: backend
spec:
  selector:
    app: jaime-back
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: jaime-agent-cluster
  namespace: jaime
  labels:
    application: jaime
    component: agent
spec:
  ports:
  - port: 7001
    name: agent
  selector:
    app: jaime-agent-cluster

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: jaime
  labels:
    application: jaime
    component: db
spec:
  ports:
  - port: 5432
    protocol: TCP
  selector:
    app: postgres

---

####################################################
# ROUTES
####################################################

kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: jaime
  namespace: jaime
  labels:
    application: jaime
    component: frontend
spec:
  to:
    name: jaime-front
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---

kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: jaime-back
  namespace: jaime
  labels:
    application: jaime
    component: backend
spec:
  to:
    name: jaime-back
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---

####################################################
# DEPLOYMENTS
####################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: jaime
    component: frontend
  name: jaime-front
  namespace: jaime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaime-front
  template:
    metadata:
      labels:
        app: jaime-front
    spec:
      containers:
        - name: jaime
          image: 'ghcr.io/jaime-project/jaime-front:0.5.0'
          securityContext:
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: JAIME_URL
              valueFrom:
                configMapKeyRef:
                  name: jaime-config
                  key: JAIME_BACK_URL_EXTERNAL
          ports:
            - containerPort: 5000
              protocol: TCP

---

####################################################
# STATEFULSETS
####################################################

kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    application: jaime-back
    component: backend
  name: jaime-back
  namespace: jaime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaime-back
  serviceName: jaime-back
  template:
    metadata:
      labels:
        app: jaime-back
    spec:
      volumes:
        - name: jaime-pvc
          persistentVolumeClaim:
            claimName: jaime-pvc
      containers:
        - name: jaime-back
          image: 'ghcr.io/jaime-project/jaime-back:0.5.0'
          securityContext:
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 5000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: jaime-config
            - secretRef:
                name: jaime-secrets
          imagePullPolicy: Always
          volumeMounts:
            - name: jaime-pvc
              mountPath: /home/jaime/

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    application: jaime-agent-cluster
    component: agent
  name: jaime-agent-cluster
  namespace: jaime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaime-agent-cluster
  serviceName: jaime-agent-cluster
  template:
    metadata:
      labels:
        app: jaime-agent-cluster
    spec:
      volumes:
        - name: jaime-pvc
          persistentVolumeClaim:
            claimName: jaime-pvc
      containers:
        - name: jaime-agent-cluster
          image: 'ghcr.io/jaime-project/jaime-agent-cluster:0.5.0'
          securityContext:
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 7001
              protocol: TCP
          env:
            - name: JAIME_URL
              valueFrom:
                configMapKeyRef:
                  name: jaime-config
                  key: JAIME_BACK_URL_INTERNAL
          imagePullPolicy: Always
          volumeMounts:
            - name: jaime-pvc
              mountPath: /home/jaime/shared

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    application: postgres
    component: db
  name: postgres
  namespace: jaime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-pvc
          persistentVolumeClaim:
            claimName: postgres-pvc
      containers:
        - name: postgres
          image: docker.io/library/postgres:15
          securityContext:
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 5432
              protocol: UDP
          envFrom:
            - secretRef:
                name: postgres-secrets
          imagePullPolicy: Always
          volumeMounts:
            - name: postgres-pvc
              mountPath: /var/lib/postgresql

---

####################################################
# PVCs
####################################################

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jaime-pvc
  namespace: jaime
  labels:
    application: jaime
    component: back
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  namespace: jaime
  labels:
    application: postgres
    component: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem

---
